<feature_model name="LinuxKernel_arch">
<meta>
<data name="features">113</data>
</meta>
<feature_tree>
:r LinuxKernel_arch(LinuxKernel_arch)
	:o CRASH_CORE(CRASH_CORE)
	:o KEXEC_CORE(KEXEC_CORE)
	:o HAVE_IMA_KEXEC(HAVE_IMA_KEXEC)
	:o OPROFILE(OPROFILE)
	:o OPROFILE_EVENT_MULTIPLEX(OPROFILE_EVENT_MULTIPLEX)
	:o HAVE_OPROFILE(HAVE_OPROFILE)
	:o OPROFILE_NMI_TIMER(OPROFILE_NMI_TIMER)
	:o KPROBES(KPROBES)
	:o JUMP_LABEL(JUMP_LABEL)
	:o STATIC_KEYS_SELFTEST(STATIC_KEYS_SELFTEST)
	:o OPTPROBES(OPTPROBES)
	:o KPROBES_ON_FTRACE(KPROBES_ON_FTRACE)
	:o UPROBES(UPROBES)
	:o HAVE_64BIT_ALIGNED_ACCESS(HAVE_64BIT_ALIGNED_ACCESS)
	:o HAVE_EFFICIENT_UNALIGNED_ACCESS(HAVE_EFFICIENT_UNALIGNED_ACCESS)
	:o ARCH_USE_BUILTIN_BSWAP(ARCH_USE_BUILTIN_BSWAP)
	:o KRETPROBES(KRETPROBES)
	:o USER_RETURN_NOTIFIER(USER_RETURN_NOTIFIER)
	:o HAVE_IOREMAP_PROT(HAVE_IOREMAP_PROT)
	:o HAVE_KPROBES(HAVE_KPROBES)
	:o HAVE_KRETPROBES(HAVE_KRETPROBES)
	:o HAVE_OPTPROBES(HAVE_OPTPROBES)
	:o HAVE_KPROBES_ON_FTRACE(HAVE_KPROBES_ON_FTRACE)
	:o HAVE_NMI(HAVE_NMI)
	:o HAVE_NMI_WATCHDOG(HAVE_NMI_WATCHDOG)
	:o HAVE_ARCH_TRACEHOOK(HAVE_ARCH_TRACEHOOK)
	:o HAVE_DMA_CONTIGUOUS(HAVE_DMA_CONTIGUOUS)
	:o GENERIC_SMP_IDLE_THREAD(GENERIC_SMP_IDLE_THREAD)
	:o GENERIC_IDLE_POLL_SETUP(GENERIC_IDLE_POLL_SETUP)
	:o ARCH_HAS_SET_MEMORY(ARCH_HAS_SET_MEMORY)
	:o ARCH_INIT_TASK(ARCH_INIT_TASK)
	:o ARCH_TASK_STRUCT_ALLOCATOR(ARCH_TASK_STRUCT_ALLOCATOR)
	:o ARCH_THREAD_STACK_ALLOCATOR(ARCH_THREAD_STACK_ALLOCATOR)
	:o ARCH_WANTS_DYNAMIC_TASK_STRUCT(ARCH_WANTS_DYNAMIC_TASK_STRUCT)
	:o HAVE_REGS_AND_STACK_ACCESS_API(HAVE_REGS_AND_STACK_ACCESS_API)
	:o HAVE_CLK(HAVE_CLK)
	:o HAVE_DMA_API_DEBUG(HAVE_DMA_API_DEBUG)
	:o HAVE_HW_BREAKPOINT(HAVE_HW_BREAKPOINT)
	:o HAVE_MIXED_BREAKPOINTS_REGS(HAVE_MIXED_BREAKPOINTS_REGS)
	:o HAVE_USER_RETURN_NOTIFIER(HAVE_USER_RETURN_NOTIFIER)
	:o HAVE_PERF_EVENTS_NMI(HAVE_PERF_EVENTS_NMI)
	:o HAVE_PERF_REGS(HAVE_PERF_REGS)
	:o HAVE_PERF_USER_STACK_DUMP(HAVE_PERF_USER_STACK_DUMP)
	:o HAVE_ARCH_JUMP_LABEL(HAVE_ARCH_JUMP_LABEL)
	:o HAVE_RCU_TABLE_FREE(HAVE_RCU_TABLE_FREE)
	:o ARCH_HAVE_NMI_SAFE_CMPXCHG(ARCH_HAVE_NMI_SAFE_CMPXCHG)
	:o HAVE_ALIGNED_STRUCT_PAGE(HAVE_ALIGNED_STRUCT_PAGE)
	:o HAVE_CMPXCHG_LOCAL(HAVE_CMPXCHG_LOCAL)
	:o HAVE_CMPXCHG_DOUBLE(HAVE_CMPXCHG_DOUBLE)
	:o ARCH_WEAK_RELEASE_ACQUIRE(ARCH_WEAK_RELEASE_ACQUIRE)
	:o ARCH_WANT_IPC_PARSE_VERSION(ARCH_WANT_IPC_PARSE_VERSION)
	:o ARCH_WANT_COMPAT_IPC_PARSE_VERSION(ARCH_WANT_COMPAT_IPC_PARSE_VERSION)
	:o ARCH_WANT_OLD_COMPAT_IPC(ARCH_WANT_OLD_COMPAT_IPC)
	:o HAVE_ARCH_SECCOMP_FILTER(HAVE_ARCH_SECCOMP_FILTER)
	:o SECCOMP_FILTER(SECCOMP_FILTER)
	:o HAVE_GCC_PLUGINS(HAVE_GCC_PLUGINS)
	:o GCC_PLUGINS(GCC_PLUGINS)
	:o GCC_PLUGIN_CYC_COMPLEXITY(GCC_PLUGIN_CYC_COMPLEXITY)
	:o GCC_PLUGIN_SANCOV(GCC_PLUGIN_SANCOV)
	:o GCC_PLUGIN_LATENT_ENTROPY(GCC_PLUGIN_LATENT_ENTROPY)
	:o GCC_PLUGIN_STRUCTLEAK(GCC_PLUGIN_STRUCTLEAK)
	:o GCC_PLUGIN_STRUCTLEAK_VERBOSE(GCC_PLUGIN_STRUCTLEAK_VERBOSE)
	:o HAVE_CC_STACKPROTECTOR(HAVE_CC_STACKPROTECTOR)
	:o CC_STACKPROTECTOR(CC_STACKPROTECTOR)
	:g (g0) [1,1]
		 : CC_STACKPROTECTOR_NONE(CC_STACKPROTECTOR_NONE)
		 : CC_STACKPROTECTOR_REGULAR(CC_STACKPROTECTOR_REGULAR)
		 : CC_STACKPROTECTOR_STRONG(CC_STACKPROTECTOR_STRONG)
	:o THIN_ARCHIVES(THIN_ARCHIVES)
	:o LD_DEAD_CODE_DATA_ELIMINATION(LD_DEAD_CODE_DATA_ELIMINATION)
	:o HAVE_ARCH_WITHIN_STACK_FRAMES(HAVE_ARCH_WITHIN_STACK_FRAMES)
	:o HAVE_CONTEXT_TRACKING(HAVE_CONTEXT_TRACKING)
	:o HAVE_VIRT_CPU_ACCOUNTING(HAVE_VIRT_CPU_ACCOUNTING)
	:o ARCH_HAS_SCALED_CPUTIME(ARCH_HAS_SCALED_CPUTIME)
	:o HAVE_VIRT_CPU_ACCOUNTING_GEN(HAVE_VIRT_CPU_ACCOUNTING_GEN)
	:o HAVE_IRQ_TIME_ACCOUNTING(HAVE_IRQ_TIME_ACCOUNTING)
	:o HAVE_ARCH_TRANSPARENT_HUGEPAGE(HAVE_ARCH_TRANSPARENT_HUGEPAGE)
	:o HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD(HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD)
	:o HAVE_ARCH_HUGE_VMAP(HAVE_ARCH_HUGE_VMAP)
	:o HAVE_ARCH_SOFT_DIRTY(HAVE_ARCH_SOFT_DIRTY)
	:o HAVE_MOD_ARCH_SPECIFIC(HAVE_MOD_ARCH_SPECIFIC)
	:o MODULES_USE_ELF_RELA(MODULES_USE_ELF_RELA)
	:o MODULES_USE_ELF_REL(MODULES_USE_ELF_REL)
	:o HAVE_UNDERSCORE_SYMBOL_PREFIX(HAVE_UNDERSCORE_SYMBOL_PREFIX)
	:o HAVE_IRQ_EXIT_ON_IRQ_STACK(HAVE_IRQ_EXIT_ON_IRQ_STACK)
	:o ARCH_HAS_ELF_RANDOMIZE(ARCH_HAS_ELF_RANDOMIZE)
	:o HAVE_ARCH_MMAP_RND_BITS(HAVE_ARCH_MMAP_RND_BITS)
	:o HAVE_EXIT_THREAD(HAVE_EXIT_THREAD)
	:o HAVE_ARCH_MMAP_RND_COMPAT_BITS(HAVE_ARCH_MMAP_RND_COMPAT_BITS)
	:o HAVE_ARCH_COMPAT_MMAP_BASES(HAVE_ARCH_COMPAT_MMAP_BASES)
	:o HAVE_COPY_THREAD_TLS(HAVE_COPY_THREAD_TLS)
	:o HAVE_STACK_VALIDATION(HAVE_STACK_VALIDATION)
	:o HAVE_RELIABLE_STACKTRACE(HAVE_RELIABLE_STACKTRACE)
	:o HAVE_ARCH_HASH(HAVE_ARCH_HASH)
	:o ISA_BUS_API(ISA_BUS_API)
	:o CLONE_BACKWARDS(CLONE_BACKWARDS)
	:o CLONE_BACKWARDS2(CLONE_BACKWARDS2)
	:o CLONE_BACKWARDS3(CLONE_BACKWARDS3)
	:o ODD_RT_SIGACTION(ODD_RT_SIGACTION)
	:o OLD_SIGSUSPEND(OLD_SIGSUSPEND)
	:o OLD_SIGSUSPEND3(OLD_SIGSUSPEND3)
	:o OLD_SIGACTION(OLD_SIGACTION)
	:o COMPAT_OLD_SIGACTION(COMPAT_OLD_SIGACTION)
	:o ARCH_NO_COHERENT_DMA_MMAP(ARCH_NO_COHERENT_DMA_MMAP)
	:o CPU_NO_EFFICIENT_FFS(CPU_NO_EFFICIENT_FFS)
	:o HAVE_ARCH_VMAP_STACK(HAVE_ARCH_VMAP_STACK)
	:o VMAP_STACK(VMAP_STACK)
	:o ARCH_OPTIONAL_KERNEL_RWX(ARCH_OPTIONAL_KERNEL_RWX)
	:o ARCH_OPTIONAL_KERNEL_RWX_DEFAULT(ARCH_OPTIONAL_KERNEL_RWX_DEFAULT)
	:o ARCH_HAS_STRICT_KERNEL_RWX(ARCH_HAS_STRICT_KERNEL_RWX)
	:o STRICT_KERNEL_RWX(STRICT_KERNEL_RWX)
	:o ARCH_HAS_STRICT_MODULE_RWX(ARCH_HAS_STRICT_MODULE_RWX)
	:o STRICT_MODULE_RWX(STRICT_MODULE_RWX)
	:o ARCH_WANT_RELAX_ORDER(ARCH_WANT_RELAX_ORDER)
	:o GCOVBASEDKERNELPROFILING(GCOVBASEDKERNELPROFILING)
		:o GCOV_KERNEL(GCOV_KERNEL)
		:o ARCH_HAS_GCOV_PROFILE_ALL(ARCH_HAS_GCOV_PROFILE_ALL)
		:o GCOV_PROFILE_ALL(GCOV_PROFILE_ALL)
		:g (g1) [1,1]
			 : GCOV_FORMAT_AUTODETECT(GCOV_FORMAT_AUTODETECT)
			 : GCOV_FORMAT_3_4(GCOV_FORMAT_3_4)
			 : GCOV_FORMAT_4_7(GCOV_FORMAT_4_7)

</feature_tree>
<constraints>
KEXECCORECRASHCORE: ~KEXEC_CORE or CRASH_CORE
JUMPLABELHAVEARCHJUMPLABEL: ~JUMP_LABEL or HAVE_ARCH_JUMP_LABEL
STATICKEYSSELFTESTJUMPLABEL: ~STATIC_KEYS_SELFTEST or JUMP_LABEL
OPTPROBESKPROBESHAVEOPTPROBES: ~OPTPROBES or  KPROBES
HAVEOPTPROBESOPTPROBESKPROBESHAVEOPTPROBES: ~OPTPROBES  or  HAVE_OPTPROBES
KRETPROBESKPROBESHAVEKRETPROBES: ~KRETPROBES or  KPROBES
HAVEKRETPROBESKRETPROBESKPROBESHAVEKRETPROBES: ~KRETPROBES  or  HAVE_KRETPROBES
USERRETURNNOTIFIERHAVEUSERRETURNNOTIFIER: ~USER_RETURN_NOTIFIER or HAVE_USER_RETURN_NOTIFIER
HAVENMIWATCHDOGHAVENMI: ~HAVE_NMI_WATCHDOG or HAVE_NMI
HAVEMIXEDBREAKPOINTSREGSHAVEHWBREAKPOINT: ~HAVE_MIXED_BREAKPOINTS_REGS or HAVE_HW_BREAKPOINT
ARCHWANTOLDCOMPATIPCARCHWANTCOMPATIPCPARSEVERSION: ~ARCH_WANT_OLD_COMPAT_IPC or ARCH_WANT_COMPAT_IPC_PARSE_VERSION
GCCPLUGINSHAVEGCCPLUGINS: ~GCC_PLUGINS or  HAVE_GCC_PLUGINS
GCCPLUGINCYCCOMPLEXITYGCCPLUGINS: ~GCC_PLUGIN_CYC_COMPLEXITY or  GCC_PLUGINS
GCCPLUGINSANCOVGCCPLUGINS: ~GCC_PLUGIN_SANCOV or GCC_PLUGINS
GCCPLUGINLATENTENTROPYGCCPLUGINS: ~GCC_PLUGIN_LATENT_ENTROPY or GCC_PLUGINS
GCCPLUGINSTRUCTLEAKGCCPLUGINS: ~GCC_PLUGIN_STRUCTLEAK or GCC_PLUGINS
GCCPLUGINSTRUCTLEAKVERBOSEGCCPLUGINSTRUCTLEAK: ~GCC_PLUGIN_STRUCTLEAK_VERBOSE or  GCC_PLUGIN_STRUCTLEAK
VMAPSTACKHAVEARCHVMAPSTACK: ~VMAP_STACK or  HAVE_ARCH_VMAP_STACK
STRICTKERNELRWXARCHHASSTRICTKERNELRWX: ~STRICT_KERNEL_RWX or ARCH_HAS_STRICT_KERNEL_RWX
GCOVPROFILEALLGCOVKERNELARCHHASGCOVPROFILEALL: ~GCOV_PROFILE_ALL or  GCOV_KERNEL
ARCHHASGCOVPROFILEALLGCOVPROFILEALLGCOVKERNELARCHHASGCOVPROFILEALL: ~GCOV_PROFILE_ALL  or  ARCH_HAS_GCOV_PROFILE_ALL
</constraints>
</feature_model>
